// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SingleRecipeContainer should match the snapshot when it has a props object 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SingleRecipeContainer
    recipe={
        Object {
            "id": 666,
            "ingredients": Array [
              "carrot",
              "another carrot",
            ],
            "linkUrl": "www.com",
            "publisher": "some publisher",
            "title": "some title",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <RecipeDetailsCard
        addFavorite={[Function]}
        authUser={undefined}
        id={666}
        ingredients={
                Array [
                        "carrot",
                        "another carrot",
                      ]
        }
        linkUrl="www.com"
        publisher="some publisher"
        title="some title"
/>,
      "className": "single-recipe",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "addFavorite": [Function],
        "authUser": undefined,
        "id": 666,
        "ingredients": Array [
          "carrot",
          "another carrot",
        ],
        "linkUrl": "www.com",
        "publisher": "some publisher",
        "title": "some title",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <RecipeDetailsCard
          addFavorite={[Function]}
          authUser={undefined}
          id={666}
          ingredients={
                    Array [
                              "carrot",
                              "another carrot",
                            ]
          }
          linkUrl="www.com"
          publisher="some publisher"
          title="some title"
/>,
        "className": "single-recipe",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "addFavorite": [Function],
          "authUser": undefined,
          "id": 666,
          "ingredients": Array [
            "carrot",
            "another carrot",
          ],
          "linkUrl": "www.com",
          "publisher": "some publisher",
          "title": "some title",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SingleRecipeContainer should match the snapshot when props object is empty 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SingleRecipeContainer
    recipe={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": "p",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": "p",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
